---
title: "Ex. 03-1: Processing ChIP-seq data with Nextflow"
---

## 1. Running the nf-core/chipseq pipeline

### Documentation 

Go to the Nextflow Github page and find the ChIP-seq processing workflow.  
Have a look at each processing step and understand what each step does. 

### Test run 

> Try to run a test workflow: 

```{sh eval  = FALSE}
nextflow run nf-core/chipseq -profile test,singularity \
    --max_cpus '1' \
    --max_memory '3.GB'
```

> Check out the `results/` directory.  

> What is the required input for the pipeline? Can you find it in the online documentation?  

> What are the outputs of the pipeline? 

### Run pipeline on data 

#### Launching pipeline

> Execute the nf-core/chipseq pipeline for a single TF. 

```{sh eval  = FALSE}
NXF_OPTS='-Xms1g -Xmx4g'
grep -P "^group|^Reb1|^control_ChIP-Exo" /home/ubuntu/Share/day03/ChIP-seq_design.csv > ChIP-seq_subset_design.csv
nextflow run nf-core/chipseq \
    -profile singularity \
    --input ChIP-seq_subset_design.csv \
    --genome 'R64-1-1' \
    --max_cpus '1' \
    --max_memory '3.GB' \
    --save_trimmed false \
    --narrow_peak true \
    --skip_plot_fingerprint \
    --skip_spp
```

This is what the nf-core/chipseq pipeline input datasheet looks like for a paired-end ChIP-seq library 

```{sh}
cat /home/ubuntu/Share/day03/ChIP-seq_design.csv
```

#### Launching pipeline for single-end libraries

This is what the nf-core/chipseq pipeline input datasheet looks like for a single-end ChIP-seq library 

```{sh}
cat /home/ubuntu/Share/day03/ChIP-seq_design_2.csv
```

The only modification to the Nextflow `run` command is the additional `--single_end` parameter. Easy!

```{sh eval  = FALSE}
NXF_OPTS='-Xms1g -Xmx4g'
nextflow run nf-core/chipseq \
    -profile singularity \
    -resume \
    --input /home/ubuntu/Share/day03/ChIP-seq_design_2.csv \
    --genome 'R64-1-1' \
    --single_end \
    --max_cpus '1' \
    --max_memory '4.GB' \
    --save_trimmed false \
    --narrow_peak true \
    --skip_plot_fingerprint \
    --skip_spp
```

## 2. Inspecting output of Nextflow workflow

### Efficiency of adaptor trimming 

Sequenced libraries can sometimes be contaminated with adapters, which are initially ligated to 
pulled-down DNA fragments to enable fragment hybridization on Illumina sequencing chips. 
`trim_galore` is a tool designed to remove suched contaminating adapter sequences. It scans `.fastq` files 
and trim each read if an adapter sequence is found in it. 

> Have a look at the `Cse4` fastq QC reports before and after adapter trimming with `trim_galore`.  

> How efficient does `trim_galore` seem to be?

### Other contaminating sequences

> Inspect Hsf1 ChIP-seq library (replicate 2). Has `trim_galore` removed all the adapter sequences?  

> What about other contaminating sequences? Can you speculate on the origin of such sequences?

Is there any difference in the experimental approaches used to ChIP Hsf1 and Cse4?

### ChIP-seq coverage

#### bigWig files

When performing ChIP-seq, one usually tries to profile genome-wide transcription factor binding patterns.  
One of the most important outputs of this pipeline is the `.bigwig` files. These files are essentially 
a long array of numerical values representing the (normalized) genome-wide coverage of the ChIP-seq 
library. 

> How exactly is `.bigWig` file structure? Is there a more "human-readable" version of `.bigWig` files? 

Check out documentation provided by UCSC:  
See [bigWig](http://genome.ucsc.edu/goldenPath/help/bigWig.html) and [wig](http://genome.ucsc.edu/goldenPath/help/wiggle.html) documentation.

> How comparable is the ChIP-seq coverage, from one `.bigwig` file to another? 

Have a look at the content of the folder `results/bwa/mergedLibrary/bigwig/scale/`. 

> How can you parse a `.bigWig` file in R? 

Check out rtacklayer package from Bioconductor:
See [bigWig](http://genome.ucsc.edu/goldenPath/help/bigWig.html) and [wig](http://genome.ucsc.edu/goldenPath/help/wiggle.html) documentation.

#### Enrichment over gene features

ChIP-seq coverage over specific gene features (e.g. TSS, TTS or gene bodies) is typically 
plotted as average signal or as a heatmap. 

> Have a look at the metaplots of different TFs. Can you observe differences in the enrichment profiles
for different factors? If so, comment on the differences. 

### ChIP-seq background

You can also load the tracks directly in IGV and visually inspect them.  

> Do you see differences in the background levels?  

> Visually, can you detect specific peak patterns?

Load all the tracks from Reja et al., 2015. Which type of genes have peaks? And which combinations of factors can you identify?  
Load the tracks from Cook et al., 2012. What do you observe?  
Now load Cse4 track. Is the coverage different? Where is it enriched at? Where is Cse4 supposed to be enriched in nuclei?  

### Conclusions 

> Can you make preliminary conclusions on which factors are co-localizing on the chromatin? 

> How can you decide whether a given ChIP-seq library was successful or not? 

> Can you draw general conclusions on whether a specific ChIP-seq assay may be better than the others?

