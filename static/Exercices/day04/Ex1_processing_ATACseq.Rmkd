---
title: "Ex. 04-1: Processing ATAC-seq data, the 'hard' way"
---

## 1. Downloading data

### Build genome 

As Cyril mentionned in Day 01, if we align `.fastq` files to a genome, we need to build its index first!  
Each aligner has its own index type, so to build a `BWA` index, we can use the `bwa index ...` command.  
Of course, we first need to download the sequence of the genome of interest! Luckily, for Yeast (i.e. Saccharomyces cerevisiae), 
the genome is quite small and it does not take very long to download it.

```{sh, eval = FALSE} 
mkdir R64
wget \
    ftp://ftp.ensembl.org/pub/release-102/fasta/saccharomyces_cerevisiae/dna/Saccharomyces_cerevisiae.R64-1-1.dna.toplevel.fa.gz \
    -O R64/Saccharomyces_cerevisiae.R64-1-1.dna.toplevel.fa.gz \
    && gunzip R64/Saccharomyces_cerevisiae.R64-1-1.dna.toplevel.fa.gz
bwa index R64/Saccharomyces_cerevisiae.R64-1-1.dna.toplevel.fa -p R64/R64-1-1
samtools faidx R64/Saccharomyces_cerevisiae.R64-1-1.dna.toplevel.fa
cut -f1,2 R64/Saccharomyces_cerevisiae.R64-1-1.dna.toplevel.fa.fai > R64/R64-1-1.chrom.sizes
cd ..
```

### Download reads

If there are some experiments that have already been done in previous papers, NGS reads should be hosted somehwere. 
Typically, they would be hosted as raw `.fastq` files in `SRA`, a repository which you can directly download from. For a single experiment, 
you can get information regarding its design [here (e.g. for `SRR1822164`)](https://www.ncbi.nlm.nih.gov/sra/?term=SRR1822164).  
Let's download published `SRR` experiments ranging from `SRR1822155` to `SRR1822164`.

```{sh, eval = FALSE}
mkdir data/
cd data/
curl -L ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR182/005/SRR1822155/SRR1822155_1.fastq.gz -o SacCer3_00_rep1_SRR1822155_1.fastq.gz
curl -L ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR182/005/SRR1822155/SRR1822155_2.fastq.gz -o SacCer3_00_rep1_SRR1822155_2.fastq.gz
curl -L ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR182/006/SRR1822156/SRR1822156_1.fastq.gz -o SacCer3_00_rep2_SRR1822156_1.fastq.gz
curl -L ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR182/006/SRR1822156/SRR1822156_2.fastq.gz -o SacCer3_00_rep2_SRR1822156_2.fastq.gz
curl -L ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR182/007/SRR1822157/SRR1822157_1.fastq.gz -o SacCer3_15_rep1_SRR1822157_1.fastq.gz
curl -L ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR182/007/SRR1822157/SRR1822157_2.fastq.gz -o SacCer3_15_rep1_SRR1822157_2.fastq.gz
curl -L ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR182/008/SRR1822158/SRR1822158_1.fastq.gz -o SacCer3_15_rep2_SRR1822158_1.fastq.gz
curl -L ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR182/008/SRR1822158/SRR1822158_2.fastq.gz -o SacCer3_15_rep2_SRR1822158_2.fastq.gz
curl -L ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR182/009/SRR1822159/SRR1822159_1.fastq.gz -o SacCer3_30_rep1_SRR1822159_1.fastq.gz
curl -L ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR182/009/SRR1822159/SRR1822159_2.fastq.gz -o SacCer3_30_rep1_SRR1822159_2.fastq.gz
curl -L ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR182/000/SRR1822160/SRR1822160_1.fastq.gz -o SacCer3_30_rep2_SRR1822160_1.fastq.gz
curl -L ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR182/000/SRR1822160/SRR1822160_2.fastq.gz -o SacCer3_30_rep2_SRR1822160_2.fastq.gz
curl -L ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR182/001/SRR1822161/SRR1822161_1.fastq.gz -o SacCer3_45_rep1_SRR1822161_1.fastq.gz
curl -L ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR182/001/SRR1822161/SRR1822161_2.fastq.gz -o SacCer3_45_rep1_SRR1822161_2.fastq.gz
curl -L ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR182/002/SRR1822162/SRR1822162_1.fastq.gz -o SacCer3_45_rep2_SRR1822162_1.fastq.gz
curl -L ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR182/002/SRR1822162/SRR1822162_2.fastq.gz -o SacCer3_45_rep2_SRR1822162_2.fastq.gz
curl -L ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR182/003/SRR1822163/SRR1822163_1.fastq.gz -o SacCer3_60_rep1_SRR1822163_1.fastq.gz
curl -L ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR182/003/SRR1822163/SRR1822163_2.fastq.gz -o SacCer3_60_rep1_SRR1822163_2.fastq.gz
curl -L ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR182/004/SRR1822164/SRR1822164_1.fastq.gz -o SacCer3_60_rep2_SRR1822164_1.fastq.gz
curl -L ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR182/004/SRR1822164/SRR1822164_2.fastq.gz -o SacCer3_60_rep2_SRR1822164_2.fastq.gz
cd ..
```

## 2. Running custom pipeline

In this exercise, we are not going to use a published processing pipeline (we will discuss the pros and cons later today).  
Instead, we are going to rely on a `.sh` script, which contains all the commands to process a single paired-end sequencing library. 

> Have a look at the custom ATAC-seq processing pipeline using `less`. Do you understand each step of the pipeline?  

```{sh, eval = FALSE}
less /home/ubuntu/Share/day04/bin/ATAC_pipeline.sh
```

> To execute the pipeline for all the samples, the following `for` loop is used:

```{sh, eval = FALSE}
cores=4
for sample in SRR1822155 SRR1822156 SRR1822157 SRR1822158 SRR1822159 SRR1822160 SRR1822161 SRR1822162 SRR1822163 SRR1822164
do 
    Share/day04/bin/ATAC_pipeline.sh "${sample}" "${cores}"
done
```

## 3. Inspecting output

> What type of output files are generated with this script (check `/home/ubuntu/Share/day04/` folder)?  

> Comment on the organization of the output files.  

> Comment on the reproducibility of this script.  

## 4. Checking out the tracks 

Download the `.bigwig` tracks generated in this pipeline and open them in IGV. 
If you still have them locally, try and load the `.bigwig` files from ChIP-seq experiments 
(from Ex. 03-1).  

> Can you see a good signal in the ATAC-seq tracks?  

> Comment on the shape of the peaks. Do they look different from ChIP-seq peaks?  

> What about the background? Does it look different from ChIP-seq background?  

## 5. Calling peaks 

During the ATAC-seq course, I mentionned that peak callers might be designed with a specific assay in mind.  
Here, we will use YAPC to map peaks in ATAC-seq data. YAPC is a "shape-based" peak caller, rather than a "coverage-based" peak caller, 
and is particularly suited to find narrow regions of local chromatin accessibility. 

> Run `YAPC` on ATAC-seq datasets 

```{sh, eval = FALSE}
mkdir _yapc-files/
yapc _yapc-files/stress-response \
    /home/ubuntu/Share/day04/_bigwig-files/SacCer3_00_rep1_SRR1822155.bw /home/ubuntu/Share/day04/_bigwig-files/SacCer3_00_rep2_SRR1822156.bw \
    /home/ubuntu/Share/day04/_bigwig-files/SacCer3_15_rep1_SRR1822157.bw /home/ubuntu/Share/day04/_bigwig-files/SacCer3_15_rep2_SRR1822158.bw \
    /home/ubuntu/Share/day04/_bigwig-files/SacCer3_30_rep1_SRR1822159.bw /home/ubuntu/Share/day04/_bigwig-files/SacCer3_30_rep2_SRR1822160.bw \
    /home/ubuntu/Share/day04/_bigwig-files/SacCer3_45_rep1_SRR1822161.bw /home/ubuntu/Share/day04/_bigwig-files/SacCer3_45_rep2_SRR1822162.bw \
    /home/ubuntu/Share/day04/_bigwig-files/SacCer3_60_rep1_SRR1822163.bw /home/ubuntu/Share/day04/_bigwig-files/SacCer3_60_rep2_SRR1822164.bw
```

> How many peaks were found?  

> How does this number compare to the total number of genomic sites bound by any TF (by ChIP-seq)? 

## Conclusions 

> Can you comment on the benefits of using a workflow manager? Can you see any downside?  

> Can you visually spot dynamics in the accessibility of some promoters during osmotic stress response?  

> Can you see a reason why YAPC is particularly well-designed when looking at time series? 
